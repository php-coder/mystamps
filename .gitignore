target/

# these files autogenerated by mvn eclipse:eclipse
.classpath
.project
.settings/

# IDEA related files
.idea
*.iml

# jasmine-maven-plugin uses phantomjs-maven-plugin.
# phantomjs-maven-plugin creates this log file.
phantomjsdriver.log

# minified resources
src/main/webapp/WEB-INF/static/styles/*.min.css
src/main/javascript/*.min.js
src/main/javascript/*/*.min.js

# managed by frontend-maven-plugin
src/main/frontend/node/
src/main/frontend/node_modules/

# Vagrant related files
.vagrant/
vagrant/provisioning/vagrant.retry
vagrant/provisioning/prod.inventory
vagrant/provisioning/prod.yml
vagrant/provisioning/roles/php-coder.oraclejdk/
vagrant/provisioning/roles/php-coder.nginx/
vagrant/provisioning/roles/mystamps-nginx/files/prod/my-stamps.ru.key
vagrant/provisioning/roles/mystamps-nginx/files/prod/my-stamps.ru.crt

# used by docker/prod.yml
docker/application-prod.properties
docker/mysql_backup_mystamps.sql.gz

# maven-wrapper
.mvn/wrapper/maven-wrapper.jar

# @asm0dey uses molecule for role testing which generates .pyc files
# and also creates molecule directory
*.pyc
molecule/
