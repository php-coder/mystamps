# Customize configuration from docker-compose.yml to run the application with
# PostgreSQL database.
#
# In order to get the effective configuration, run
#   docker compose -f docker-compose.yml -f postgres.yml config
#
# @todo #1034 Document how to run with PostgreSQL and docker-compose
#

services:
  web:
    environment:
      # NOTE: it's better to have credentials the same as in src/main/resources/application-postgres.properties
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mystamps
      - SPRING_DATASOURCE_USERNAME=mystamps
      - SPRING_DATASOURCE_PASSWORD=secret
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      # to test whether it works in prod-like environment
      #- SPRING_LIQUIBASE_CONTEXTS=scheme,init-data,prod-data
    #volumes:
      # to use a WAR file from filesystem and avoid to build an image every time
      #- ../../target/mystamps.war:/data/mystamps/mystamps.war:ro
    networks:
      - internal-network
    depends_on:
      - db
  db:
    # https://hub.docker.com/_/postgres
    # https://github.com/docker-library/postgres/blob/ad464b0375fc64e70e01305bf93183428a2ef0ec/11/Dockerfile
    # NOTE: it's better to have the same as in .github/workflows/integration-tests-postgres.yml
    image: postgres:11.3
    environment:
      # NOTE: it's better to have credentials the same as in .github/workflows/integration-tests-postgres.yml
      - POSTGRES_USER=mystamps
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DATABASE=mystamps
    networks:
      - internal-network

networks:
  internal-network:
