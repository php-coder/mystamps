<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>ru.mystamps</groupId>
	<artifactId>mystamps</artifactId>
	<version>0.4.8-SNAPSHOT</version>
	<packaging>war</packaging>
	
	<dependencies>
		
		<dependency>
			<groupId>com.github.heneke.thymeleaf</groupId>
			<artifactId>thymeleaf-extras-togglz</artifactId>
			<version>${thymeleaf.togglz.version}</version>
		</dependency>
		
		<!-- Required for InternetAddress class -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>jakarta.mail</artifactId>
			<version>${jakarta-mail.version}</version>
		</dependency>
		
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax-validation.version}</version>
		</dependency>
		
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>${thumbnailator.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		
		<!-- Required for StringSubstitutor -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>${commons.text.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>
		
		<!-- For running database migration during application's startup time -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		
		<!-- https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter/build.gradle -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-jdbc/build.gradle -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		
		<!-- https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-jetty/build.gradle -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse.jetty.websocket</groupId>
					<artifactId>websocket-server</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.jetty.websocket</groupId>
					<artifactId>javax-websocket-server-impl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-xml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-logging/build.gradle -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		
		<!-- https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-security/build.gradle -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<!-- https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-thymeleaf/build.gradle -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.thymeleaf.extras</groupId>
					<artifactId>thymeleaf-extras-java8time</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-web/build.gradle -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<!-- We specify dependency on jackson-databind manually -->
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-json</artifactId>
				</exclusion>
				<exclusion>
					<!-- In favour of spring-boot-starter-jetty -->
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-console</artifactId>
			<version>${togglz.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-core</artifactId>
			<version>${togglz.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-spring-security</artifactId>
			<version>${togglz.version}</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- https://docs.jboss.org/hibernate/validator/6.0/reference/en-US/html_single/#validator-annotation-processor -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
			<version>${hibernate-validator.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Dependencies which used only in test environment -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${hikaricp.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Dependencies which used only in prod environment -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Required for "postgres" profile (see src/main/resources/application-postgres.properties) -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity5</artifactId>
			<version>${thymeleaf-extras-springsecurity.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-slf4j</artifactId>
			<version>${togglz.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-spring-core</artifactId>
			<version>${togglz.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${bootstrap.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${jquery.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>selectize.js</artifactId>
			<version>${selectizejs.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>axios</artifactId>
			<version>${axios.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>follow-redirects</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>react</artifactId>
			<version>${react.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>loose-envify</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>object-assign</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>prop-types</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>scheduler</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>react-dom</artifactId>
			<version>${react.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>loose-envify</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>object-assign</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>prop-types</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>scheduler</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- For mocking of non-interface types -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Required for src/test/robotframework/account/registration/logic.robot -->
		<dependency>
			<groupId>com.github.hi-fi</groupId>
			<artifactId>robotframework-httprequestlibrary</artifactId>
			<version>${robotframework-httprequest.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>com.github.hi-fi</groupId>
			<artifactId>robotframework-seleniumlibrary</artifactId>
			<version>${robotframework-selenium.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.appium</groupId>
					<artifactId>java-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.github.bonigarcia</groupId>
					<artifactId>webdrivermanager</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.selendroid</groupId>
					<artifactId>selendroid-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.machinepublishers</groupId>
					<artifactId>jbrowserdriver</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>com.teketik</groupId>
			<artifactId>spring-test-context-cache-limiter</artifactId>
			<version>${spring-test-context-cache-limiter.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>io.qala.datagen</groupId>
			<artifactId>qala-datagen</artifactId>
			<version>${datagen.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy-old.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Other dependencies (junit-junit-engine and junit-vintage-engine) pull from spring-boot-starter-test -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>htmlunit-driver</artifactId>
			<version>${selenium-htmlunit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-api</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<version>${selenium.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>${spock.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-test/build.gradle -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.jayway.jsonpath</groupId>
					<artifactId>json-path</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-junit-jupiter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.skyscreamer</groupId>
					<artifactId>jsonassert</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.xmlunit</groupId>
					<artifactId>xmlunit-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-junit5</artifactId>
			<version>${togglz.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.togglz</groupId>
			<artifactId>togglz-testing</artifactId>
			<version>${togglz.version}</version>
			<scope>test</scope>
		</dependency>
		
	</dependencies>
	
	<!-- https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-parent/build.gradle -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.12.RELEASE</version>
	</parent>
	
	<!--
		All default versions from Spring Boot can be found there:
		https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-dependencies/build.gradle
	-->
	<properties>
		<!--
			Workaround for a bug in surefire plugin: it doesn't respect sourceEncoding
			and doesn't pass it into a forked process.
			See: https://stackoverflow.com/questions/17656475/maven-source-encoding-in-utf-8-not-working
			
			Note: don't put this property within surefire-maven-plugin as it would break jacoco-maven-plugin.
		-->
		<argLine>-Dfile.encoding=${project.build.sourceEncoding} -Xss256k</argLine>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<assertj.version>3.14.0</assertj.version>
		
		<!-- Don't forget to update version in the ResourceUrl class and in the src/main/webapp/WEB-INF/views/series/info.html -->
		<axios.version>0.19.2</axios.version>
		
		<!-- Don't forget to update version in the ResourceUrl class -->
		<bootstrap.version>3.4.1</bootstrap.version>
		
		<cglib.version>2.2.2</cglib.version>
		<checkstyle.plugin.version>2.17</checkstyle.plugin.version>
		<clean.plugin.version>3.0.0</clean.plugin.version>
		<codenarc.plugin.version>0.22-1</codenarc.plugin.version>
		<codenarc.version>0.27.0</codenarc.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<commons-lang3.version>3.13.0</commons-lang3.version>
		
		<commons.text.version>1.11.0</commons.text.version>
		<compiler.plugin.version>3.8.1</compiler.plugin.version>
		<datagen.version>2.5.1</datagen.version>
		
		<!-- Disable XML reports by default. Enabled manually by passing -DdisableXmlReport=false in CI environment -->
		<disableXmlReport>true</disableXmlReport>
		
		<dockerfile.plugin.version>1.4.6</dockerfile.plugin.version>
		<enforcer.plugin.version>3.0.0-M3</enforcer.plugin.version>
		<error-prone-javac.version>9+181-r4173-1</error-prone-javac.version>
		<error-prone.version>2.3.4</error-prone.version>
		<frontend.plugin.version>1.7.6</frontend.plugin.version>
		<gmavenplus.plugin.version>1.5</gmavenplus.plugin.version>
		
		<groovy-old.version>2.0.8</groovy-old.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<h2.version>1.4.200</h2.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<hibernate-validator.version>6.0.22.Final</hibernate-validator.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<hikaricp.version>4.0.3</hikaricp.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<htmlunit.version>2.46.0</htmlunit.version>
		
		<jacoco.plugin.version>0.8.8</jacoco.plugin.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<jakarta-mail.version>1.6.7</jakarta-mail.version>
		
		<!--
			Redefine default value from spring-boot-starter-parent:
			https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-parent/build.gradle
		-->
		<java.version>1.8</java.version>
		
		<javadoc.plugin.version>3.4.0</javadoc.plugin.version>
		<javassist.version>3.21.0-GA</javassist.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<javax-validation.version>2.0.1.Final</javax-validation.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<jetty.version>9.4.19.v20190610</jetty.version>
		
		<!-- Don't forget to update version in the ResourceUrl class -->
		<jquery.version>1.9.1</jquery.version>
		
		<jsoup.version>1.16.2</jsoup.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<junit-jupiter.version>5.3.2</junit-jupiter.version>
		<junit.version>4.13.2</junit.version>
		
		<license.plugin.version>3.0</license.plugin.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<liquibase.version>4.11.0</liquibase.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<lombok.version>1.18.30</lombok.version>
		
		<minify.plugin.version>1.7.6</minify.plugin.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<mysql.version>5.1.49</mysql.version>
		
		<native2ascii.plugin.version>2.0.1</native2ascii.plugin.version>
		<owasp-plugin.version>3.0.2</owasp-plugin.version>
		<pmd.plugin.version>3.12.0</pmd.plugin.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<postgresql.version>9.4.1212.jre7</postgresql.version>
		
		<!--
			Don't forget to update version in the following places:
			- ResourceUrl class
			- src/main/webapp/WEB-INF/views/series/info.html
			- src/main/frontend/package.json
		-->
		<react.version>16.8.6</react.version>
		
		<resources.plugin.version>3.2.0</resources.plugin.version>
		<robotframework-httprequest.version>0.0.15</robotframework-httprequest.version>
		<robotframework-plugin.version>1.7.2</robotframework-plugin.version>
		<robotframework-selenium.version>3.141.59.26535</robotframework-selenium.version>
		<robotframework.version>3.2.2</robotframework.version>
		
		<!-- Don't forget to update version in the ResourceUrl class and in the src/main/webapp/WEB-INF/views/series/add.html -->
		<selectizejs.version>0.13.3</selectizejs.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<selenium-htmlunit.version>2.46.0</selenium-htmlunit.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<selenium.version>3.141.59</selenium.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<servlet-api.version>4.0.1</servlet-api.version>
		
		<skipUnitTests>false</skipUnitTests>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<slf4j.version>1.7.36</slf4j.version>
		
		<sortpom.plugin.version>2.5.0</sortpom.plugin.version>
		
		<spock.version>1.0-groovy-2.0</spock.version>
		<spotbugs.plugin.version>3.1.11</spotbugs.plugin.version>
		
		<!-- Redefine default value from spring-boot-dependencies in order to have the latest version -->
		<!-- LATER: remove overriding once version from Spring Boot will match the used one  -->
		<spring-framework.version>5.2.25.RELEASE</spring-framework.version>
		
		<!-- Redefine default value from spring-boot-dependencies in order to have the latest version -->
		<!-- LATER: remove overriding once version from Spring Boot will match the used one  -->
		<spring-security.version>5.3.13.RELEASE</spring-security.version>
		
		<spring-test-context-cache-limiter.version>boot2-v1.2</spring-test-context-cache-limiter.version>
		
		<!--
			Define default value for spring-boot-starter-parent:
			https://github.com/spring-projects/spring-boot/blob/v2.3.12.RELEASE/spring-boot-project/spring-boot-starters/spring-boot-starter-parent/build.gradle
		-->
		<start-class>ru.mystamps.web.support.spring.boot.ApplicationBootstrap</start-class>
		
		<surefire.plugin.version>2.22.0</surefire.plugin.version>
		<thumbnailator.version>0.4.20</thumbnailator.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<thymeleaf-extras-springsecurity.version>3.0.4.RELEASE</thymeleaf-extras-springsecurity.version>
		
		<thymeleaf.togglz.version>2.0.1.RELEASE</thymeleaf.togglz.version>
		
		<!-- Redefine default value from spring-boot-dependencies -->
		<thymeleaf.version>3.0.11.RELEASE</thymeleaf.version>
		
		<togglz.version>2.6.1.Final</togglz.version>
		<war.plugin.version>3.3.1</war.plugin.version>
		<wiremock.plugin.version>7.0.0</wiremock.plugin.version>
		<wiremock.version>2.27.2</wiremock.version>
	</properties>
	
	<build>
		<finalName>${project.artifactId}</finalName>
		
		<filters>
			<filter>${basedir}/src/main/resources/test/spring/test-data.properties</filter>
		</filters>
		
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>${basedir}/src/main/resources</directory>
				<includes>
					<include>liquibase/sql/test-*.sql</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>liquibase/sql/test-*.sql</exclude>
				</excludes>
			</resource>
			<resource>
				<targetPath>js</targetPath>
				<directory>${basedir}/src/main/javascript</directory>
				<includes>
					<include>**/*.min.js</include>
				</includes>
			</resource>
		</resources>
		
		<plugins>
			
			<plugin>
				<groupId>com.github.ekryd.sortpom</groupId>
				<artifactId>sortpom-maven-plugin</artifactId>
				<version>${sortpom.plugin.version}</version>
				<configuration>
					<lineSeparator>\n</lineSeparator>
					<predefinedSortOrder>default_0_4_0</predefinedSortOrder>
					<keepBlankLines>true</keepBlankLines>
					<indentBlankLines>true</indentBlankLines>
					<sortDependencies>scope,groupId,artifactId</sortDependencies>
					<sortPlugins>groupId,artifactId</sortPlugins>
					<sortProperties>true</sortProperties>
					<!-- Use tabs instead of spaces for indentation -->
					<nrOfIndentSpace>-1</nrOfIndentSpace>
				</configuration>
			</plugin>
			
			<!--
				Usage:
				./mvnw spotbugs:check (checks the sources and produces report to the console)
			-->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs.plugin.version}</version>
				<configuration>
					<includeTests>true</includeTests>
					<excludeFilterFile>src/main/config/spotbugs-filter.xml</excludeFilterFile>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${license.plugin.version}</version>
				<configuration>
					<basedir>src</basedir>
					<header>${basedir}/src/main/config/license_header.txt</header>
					<includes>
						<include>**/*.java</include>
						<include>**/*.groovy</include>
					</includes>
					<excludes>
						<exclude>**/package-info.java</exclude>
					</excludes>
					<mapping>
						<java>SLASHSTAR_STYLE</java>
					</mapping>
					<properties>
						<copyright.years>${project.inceptionYear}-2023</copyright.years>
						<author.name>${project.developers[0].name}</author.name>
						<author.email>${project.developers[0].email}</author.email>
					</properties>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<version>${minify.plugin.version}</version>
				<configuration>
					<!-- Put minified versions to the same directory so that spring-boot:run can pick it -->
					<webappSourceDir>${basedir}/src/main/webapp</webappSourceDir>
					<webappTargetDir>${basedir}/src/main/webapp</webappTargetDir>
					<cssSourceDir>WEB-INF/static/styles</cssSourceDir>
					<cssSourceFiles>
						<cssSourceFile>main.css</cssSourceFile>
					</cssSourceFiles>
					<jsSourceDir>../javascript</jsSourceDir>
					<jsSourceIncludes>
						<jsSourceInclude>**/*.js</jsSourceInclude>
					</jsSourceIncludes>
					<jsSourceExcludes>
						<jsSourceExclude>**/*.min.js</jsSourceExclude>
					</jsSourceExcludes>
					<skipMerge>true</skipMerge>
				</configuration>
				<executions>
					<execution>
						<id>minify-resources</id>
						<goals>
							<goal>minify</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile.plugin.version}</version>
				<configuration>
					<repository>phpcoder/mystamps</repository>
					<!-- FIXME: set it to docker/ after https://github.com/spotify/dockerfile-maven/pull/89 will be merged -->
					<contextDirectory>target</contextDirectory>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.plugin.version}</version>
				<configuration>
					<enableRSS>false</enableRSS>
					<consoleOutput>true</consoleOutput>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<linkXRef>false</linkXRef>
					<configLocation>${basedir}/src/main/config/checkstyle.xml</configLocation>
					<suppressionsLocation>${basedir}/src/main/config/checkstyle-suppressions.xml</suppressionsLocation>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${clean.plugin.version}</version>
				<configuration>
					<!-- Remove minified resources -->
					<filesets>
						<fileset>
							<directory>src/main/webapp/WEB-INF/static/styles</directory>
							<includes>
								<include>*.min.css</include>
							</includes>
						</fileset>
						<fileset>
							<directory>src/main/javascript</directory>
							<includes>
								<include>**/*.min.js</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<debug>false</debug>
					<failOnWarning>true</failOnWarning>
					<compilerArgs>
						<compilerArg>-Xlint:unchecked</compilerArg>
						<!-- Required for ErrorProne -->
						<!--
							@todo #971 Document ErrorProne tool
						-->
						<compilerArg>-XDcompilePolicy=simple</compilerArg>
						<!--
							@todo #1170 ErrorProne: activate experimental checks
						-->
						<!--
							The following checks have been disabled:
							- MissingOverride: produce false positives with @Getter from Lombok
							- MixedMutabilityReturnType: because I like to use Collections.empty*() methods
							- UnnecessaryAnonymousClass: I prefer to have an explicit implementation in a constant
							- PreferJavaTimeOverload: disabled because of false positives: https://github.com/google/error-prone/issues/1435
						-->
						<compilerArg>-Xplugin:ErrorProne -Xep:MissingOverride:OFF -Xep:MixedMutabilityReturnType:OFF -Xep:UnnecessaryAnonymousClass:OFF -Xep:PreferJavaTimeOverload:OFF</compilerArg>
					</compilerArgs>
					<annotationProcessorPaths>
						<path>
							<groupId>com.google.errorprone</groupId>
							<artifactId>error_prone_core</artifactId>
							<version>${error-prone.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${enforcer.plugin.version}</version>
				<configuration>
					<rules>
						<bannedDependencies>
							<excludes>
								<!-- Because we use jcl-over-slf4j instead -->
								<exclude>commons-logging</exclude>
								<!-- Because we use org.mortbay.jasper:apache-el instead -->
								<exclude>org.apache.tomcat.embed:tomcat-embed-el</exclude>
								<exclude>junit:*:*:*:compile</exclude>
								<exclude>org.hamcrest:*:*:*:compile</exclude>
								<exclude>org.yaml:snakeyaml</exclude>
							</excludes>
						</bannedDependencies>
						<requireJavaVersion>
							<version>${java.version}</version>
						</requireJavaVersion>
					</rules>
				</configuration>
				<executions>
					<execution>
						<id>enforce-banned-dependencies</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${javadoc.plugin.version}</version>
				<configuration>
					<quiet>true</quiet>
					<nohelp>true</nohelp>
					<nodeprecatedlist>true</nodeprecatedlist>
					<failOnWarnings>true</failOnWarnings>
					<bottom>Copyright &#169; {inceptionYear}&#x2013;{currentYear} ${project.developers[0].name}. All rights reserved.</bottom>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.plugin.version}</version>
				<configuration>
					<linkXRef>false</linkXRef>
					<verbose>true</verbose>
					<targetJdk>${java.version}</targetJdk>
					<rulesets>
						<ruleset>${basedir}/src/main/config/pmd.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${resources.plugin.version}</version>
				<executions>
					<!-- FIXME: remove this workaround after merging https://github.com/spotify/dockerfile-maven/pull/89 -->
					<execution>
						<id>copy-docker-resources</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<!-- copy infra/docker/Dockerfile to target/ -->
							<outputDirectory>target</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/infra/docker</directory>
									<includes>
										<include>Dockerfile</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.plugin.version}</version>
				<configuration>
					<skipTests>${skipUnitTests}</skipTests>
					<disableXmlReport>${disableXmlReport}</disableXmlReport>
					<systemPropertyVariables>
						<!--
							Specify the maximum number of contexts that should be created during unit tests
							See for details: https://github.com/antoinemeyer/spring-test-context-cache-limiter
						-->
						<spring.test.context.limitSize>1</spring.test.context.limitSize>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${war.plugin.version}</version>
				<configuration>
					<!-- Exclude non-minified versions of resources -->
					<warSourceExcludes>WEB-INF/static/styles/main.css</warSourceExcludes>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>${gmavenplus.plugin.version}</version>
				<configuration>
					<!--
						Groovy compiler warning level. Should be one of:
						0 (None), 1 (Likely Errors), 2 (Possible Errors), 3 (Paranoia)
					-->
					<warningLevel>3</warningLevel>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!--
				Usage:
				./mvnw codenarc:codenarc (checks the sources and generates report in target/site/codenarc.html)
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>codenarc-maven-plugin</artifactId>
				<version>${codenarc.plugin.version}</version>
				<configuration>
					<codeNarcVersion>${codenarc.version}</codeNarcVersion>
					<groovyVersion>${groovy-old.version}</groovyVersion>
					<sourceDirectory>src/test/groovy</sourceDirectory>
					<!--
						rulesets/enhanced.xml was excluded because of a lot of errors about failed
						compilation: https://github.com/CodeNarc/CodeNarc/issues/123
					-->
					<rulesetfiles>
						rulesets/basic.xml,rulesets/braces.xml,rulesets/concurrency.xml,rulesets/convention.xml,rulesets/design.xml,rulesets/dry.xml,rulesets/exceptions.xml,rulesets/formatting.xml,rulesets/generic.xml,rulesets/groovyism.xml,rulesets/imports.xml,rulesets/jdbc.xml,rulesets/logging.xml,rulesets/naming.xml,rulesets/security.xml,rulesets/serialization.xml,rulesets/unnecessary.xml,rulesets/unused.xml
					</rulesetfiles>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
			</plugin>
			
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>${liquibase.version}</version>
				<configuration>
					<changeLogFile>${basedir}/src/main/resources/liquibase/changelog.xml</changeLogFile>
					<migrationSqlOutputFile>/dev/stdout</migrationSqlOutputFile>
					<!-- See also application-prod.properties -->
					<contexts>scheme,init-data,prod-data</contexts>
					<!-- This configuration matches with infra/docker/prod.yml -->
					<driver>com.mysql.jdbc.Driver</driver>
					<url>jdbc:mysql://localhost:3306/mystamps?characterEncoding=UTF-8&amp;useSSL=false</url>
					<username>mystamps</username>
					<password>secret</password>
				</configuration>
			</plugin>
			
			<!--
				Usage: ./mvnw org.owasp:dependency-check-maven:check
				(analyze dependencies for vulnerabilities and creates report in target/dependency-check-report.html)
			-->
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${owasp-plugin.version}</version>
			</plugin>
			
			<!--
				Usage:
				./mvnw robotframework:run (runs tests and generates report in target/robotframework-reports/report.html)
			-->
			<plugin>
				<groupId>org.robotframework</groupId>
				<artifactId>robotframework-maven-plugin</artifactId>
				<version>${robotframework-plugin.version}</version>
				<configuration>
					<testCasesDirectory>${basedir}/src/test/robotframework</testCasesDirectory>
					<xunitFile>NONE</xunitFile>
					<randomize>suite</randomize>
					<!-- See https://robotframework.org/robotframework/3.2.2/RobotFrameworkUserGuide.html#controlling-console-output -->
					<console>dotted</console>
					<!-- See https://robotframework.org/robotframework/3.2.2/RobotFrameworkUserGuide.html#removing-keywords -->
					<removeKeywords>PASSED</removeKeywords>
					<!-- Handy for debugging. Log file will be created in target/ directory -->
					<!--
					<debugFile>${project.build.directory}/robotframework.log</debugFile>
					<logLevel>DEBUG</logLevel>
					-->
					<variables>
						<variable>BROWSER:htmlunitwithjs</variable>
						<variable>MAIN_RESOURCE_DIR:${basedir}/src/main/resources/test</variable>
						<variable>TEST_RESOURCE_DIR:${basedir}/src/test/resources</variable>
						<variable>MOCK_SERVER:http://127.0.0.1:8888</variable>
						<!-- See also ru.mystamps.web.feature.site.SiteUrl.SITE constant -->
						<variable>SITE_URL:http://127.0.0.1:8080</variable>
					</variables>
					<nonCriticalTags>
						<!-- Allow to tests with this tag to fail without changing final status -->
						<nonCriticalTag>unstable</nonCriticalTag>
					</nonCriticalTags>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.javassist</groupId>
						<artifactId>javassist</artifactId>
						<version>${javassist.version}</version>
					</dependency>
					<dependency>
						<groupId>org.robotframework</groupId>
						<artifactId>robotframework</artifactId>
						<version>${robotframework.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!--
						Exclude provided artifacts from resulted WAR.
						@see https://github.com/spring-projects/spring-boot/issues/649
						@see https://github.com/spring-projects/spring-boot/issues/650
					-->
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
						<exclude>
							<groupId>org.hibernate.validator</groupId>
							<artifactId>hibernate-validator-annotation-processor</artifactId>
						</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>start-application</id>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-application</id>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!--
				Usage:
				./mvnw wiremock:run (run WireMock server with mocks from src/test/wiremock/mappings)
			-->
			<plugin>
				<groupId>uk.co.automatictester</groupId>
				<artifactId>wiremock-maven-plugin</artifactId>
				<version>${wiremock.plugin.version}</version>
				<configuration>
					<dir>${basedir}/src/test/wiremock</dir>
					<!--
						The list of available options:
						http://wiremock.org/docs/running-standalone/
					-->
					<!-- Handy for debugging: add &#45;&#45;verbose option -->
					<params>--port=8888 --disable-banner --container-threads=5 --jetty-acceptor-threads=1</params>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.github.tomakehurst</groupId>
						<artifactId>wiremock-jre8</artifactId>
						<version>${wiremock.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>run</goal>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
		
	</build>
	
	<name>My Stamps</name>
	<description>Site about post stamps</description>
	<url>https://my-stamps.ru</url>
	<inceptionYear>2009</inceptionYear>
	
	<licenses>
		<license>
			<name>GNU GPL v2</name>
			<url>https://www.gnu.org/licenses/old-licenses/gpl-2.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	
	<developers>
		<developer>
			<name>Slava Semushin</name>
			<email>slava.semushin@gmail.com</email>
			<url>https://my-stamps.ru</url>
			<roles>
				<role>founder</role>
				<role>developer</role>
			</roles>
			<timezone>+7</timezone>
		</developer>
		<developer>
			<name>Sergey Chechenev</name>
			<email>cssru@mail.ru</email>
			<roles>
				<role>contributor</role>
			</roles>
			<timezone>+3</timezone>
		</developer>
	</developers>
	
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/php-coder/mystamps/issues</url>
	</issueManagement>
	
	<ciManagement>
		<system>GitHub Actions</system>
		<url>https://github.com/php-coder/mystamps/actions</url>
	</ciManagement>
	
	<scm>
		<connection>scm:git:git://github.com/php-coder/mystamps.git</connection>
		<url>https://github.com/php-coder/mystamps</url>
	</scm>
	
	<profiles>
		<profile>
			<id>jdk8</id>
			<activation>
				<jdk>1.8</jdk>
			</activation>
			<build>
				<plugins>
					<!-- Required for ErrorProne -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<fork>true</fork>
							<compilerArgs combine.children="append">
								<compilerArg>
									-J-Xbootclasspath/p:${settings.localRepository}/com/google/errorprone/javac/${error-prone-javac.version}/javac-${error-prone-javac.version}.jar
								</compilerArg>
							</compilerArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>frontend</id>
			<activation>
				<file>
					<!-- Should be in sync with Babel configuration from src/main/frontend/package.json -->
					<missing>target/classes/js/components</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<!--
						@todo #1060 Document usage of frontend-maven-plugin
					-->
					<!--
						We assume that most of the time we develop backend rather frontend.
						So, we cache and skip the frontend-related things by default. This
						should save us a little time on every iteration during development
						on local environment.
					-->
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${frontend.plugin.version}</version>
						<configuration>
							<nodeVersion>v10.16.0</nodeVersion>
							<workingDirectory>${basedir}/src/main/frontend</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install-node-and-npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>initialize</phase>
							</execution>
							<execution>
								<id>npm-ci</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<arguments>ci</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm-run-build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>run build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>native2ascii</id>
			<activation>
				<file>
					<missing>target/classes/ru/mystamps/i18n</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<!--
						We assume that most of the time we don't modify translations.
						So, we execute this plugin only on a first time and don't execute
						it on the next runs. This should save us a little time on every
						iteration during development on local environment.
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>native2ascii-maven-plugin</artifactId>
						<version>${native2ascii.plugin.version}</version>
						<configuration>
							<srcDir>${basedir}/src/main/resources/ru/mystamps/i18n</srcDir>
							<targetDir>${project.build.outputDirectory}/ru/mystamps/i18n</targetDir>
						</configuration>
						<executions>
							<execution>
								<id>utf8-to-latin1</id>
								<goals>
									<goal>resources</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
</project>
