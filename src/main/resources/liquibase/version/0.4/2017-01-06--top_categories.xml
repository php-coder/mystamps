<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
		xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.24.xsd">
	
	<removeChangeSetProperty change="addColumn" remove="beforeColumn" dbms="mysql,postgresql" />
	
	<changeSet id="create-top_categories-table" author="php-coder" context="scheme">
		
		<createTable tableName="top_categories">
			<column name="id" type="INTEGER" autoIncrement="true">
				<constraints primaryKey="true" />
			</column>
			<column name="name" type="VARCHAR(50)">
				<constraints unique="true" uniqueConstraintName="uc_top_categories_name" nullable="false" />
			</column>
			<column name="name_ru" type="VARCHAR(50)">
				<constraints unique="true" uniqueConstraintName="uc_top_categories_name_ru" />
			</column>
			<column name="created_at" type="DATETIME">
				<constraints nullable="false" />
			</column>
			<column name="created_by" type="INTEGER">
				<constraints nullable="false" references="users(id)" foreignKeyName="fk_top_categories_created_by" />
			</column>
			<column name="updated_at" type="DATETIME">
				<constraints nullable="false" />
			</column>
			<column name="updated_by" type="INTEGER">
				<constraints nullable="false" references="users(id)" foreignKeyName="fk_top_categories_updated_by" />
			</column>
		</createTable>
		
	</changeSet>
	
	<changeSet id="add-categories-top_category_id-field" author="php-coder" context="scheme">
		
		<addColumn tableName="categories">
			<column name="top_category_id" type="INTEGER" beforeColumn="created_at">
				<constraints references="top_categories(id)" foreignKeyName="fk_top_categories_id" />
			</column>
		</addColumn>
		
	</changeSet>
	
	<changeSet id="create-admin-user-if-does-not-exist" author="php-coder" context="test-data, prod-data">
		<!--
			Creates user with role ADMIN if it doesn't exist.
			Required by the add-fauna-top-level-category change set.
		-->
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				SELECT COUNT(*)
				  FROM users
				 WHERE role = 'ADMIN'
			</sqlCheck>
		</preConditions>
		
		<insert tableName="users">
			<column name="login" value="admin" />
			<column name="role" value="ADMIN" />
			<column name="name" value="Admin" />
			<column name="email" value="root@localhost" />
			<column name="hash" value="no-password" />
			<column name="registered_at" valueComputed="${NOW}" />
			<column name="activated_at" valueComputed="${NOW}" />
		</insert>
		
		<insert tableName="collections">
			<column name="user_id" valueComputed="(SELECT id FROM users WHERE login = 'admin')" />
			<column name="slug" value="admin" />
		</insert>
		
	</changeSet>
	
	<changeSet id="add-fauna-top-level-category" author="php-coder" context="test-data, prod-data">
		
		<insert tableName="top_categories">
			<column name="name" value="Fauna" />
			<column name="name_ru" value="Фауна" />
			<column name="created_at" valueComputed="${NOW}" />
			<column name="created_by" valueComputed="(SELECT id FROM users WHERE role = 'ADMIN' ORDER by id LIMIT 1)" />
			<column name="updated_at" valueComputed="${NOW}" />
			<column name="updated_by" valueComputed="(SELECT id FROM users WHERE role = 'ADMIN' ORDER by id LIMIT 1)" />
		</insert>
	
	</changeSet>
	
	<changeSet id="move-prehistoric-animals-inside-fauna" author="php-coder" context="test-data, prod-data">
		
		<update tableName="categories">
			<column name="top_category_id" valueComputed="(SELECT id FROM top_categories WHERE name = 'Fauna')" />
			<where>slug = 'prehistoric-animals'</where>
		</update>
		
	</changeSet>
	
	<changeSet id="add-sport-category" author="php-coder" context="test-data">
		
		<insert tableName="categories">
			<column name="name" value="Sport" />
			<column name="name_ru" value="Спорт" />
			<column name="slug" value="sport" />
			<column name="created_at" valueComputed="${NOW}" />
			<column name="created_by" valueComputed="(SELECT id FROM users WHERE role = 'ADMIN' ORDER by id LIMIT 1)" />
			<column name="updated_at" valueComputed="${NOW}" />
			<column name="updated_by" valueComputed="(SELECT id FROM users WHERE role = 'ADMIN' ORDER by id LIMIT 1)" />
		</insert>
		
	</changeSet>
	
</databaseChangeLog>
